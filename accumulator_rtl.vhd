-- VHDL Entity trapezoidal.accumulator.symbol
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 11:34:45 27/07/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY accumulator IS
   GENERIC( 
      g_outdata_width : natural := 37
   );
   PORT( 
      acc_in : IN     std_logic_vector (g_outdata_width-1 DOWNTO 0);
      clk    : IN     std_logic;
      en     : IN     std_logic;
      rst_n  : IN     std_logic;
      acc    : OUT    std_logic_vector (g_outdata_width-1 DOWNTO 0)
   );

-- Declarations

END accumulator ;

--
-- VHDL Architecture trapezoidal.accumulator.rtl
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 11:34:45 27/07/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY trapezoidal;

ARCHITECTURE rtl OF accumulator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL acc_d1  : std_logic_vector(g_outdata_width-1 DOWNTO 0);
   SIGNAL acc_int : std_logic_vector(g_outdata_width-1 DOWNTO 0);


   -- Component Declarations
   COMPONENT adder
   GENERIC (
      g_outdata_width : natural := 37
   );
   PORT (
      op2 : IN     std_logic_vector (g_outdata_width-1 DOWNTO 0);
      op1 : IN     std_logic_vector (g_outdata_width-1 DOWNTO 0);
      add : OUT    std_logic_vector (g_outdata_width-1 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT reg
   GENERIC (
      g_outdata_width : natural := 37
   );
   PORT (
      clk   : IN     std_logic ;
      rst_n : IN     std_logic ;
      d     : IN     std_logic_vector (g_outdata_width-1 DOWNTO 0);
      q     : OUT    std_logic_vector (g_outdata_width-1 DOWNTO 0);
      en    : IN     std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : adder USE ENTITY trapezoidal.adder;
   FOR ALL : reg USE ENTITY trapezoidal.reg;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 3 output
   p_out_assigment : acc <= acc_int;
   
   


   -- Instance port mappings.
   i_adder_acc : adder
      GENERIC MAP (
         g_outdata_width => 37
      )
      PORT MAP (
         op2 => acc_d1,
         op1 => acc_in,
         add => acc_int
      );
   i_reg_acc : reg
      GENERIC MAP (
         g_outdata_width => 37
      )
      PORT MAP (
         clk   => clk,
         rst_n => rst_n,
         d     => acc_int,
         q     => acc_d1,
         en    => en
      );

END rtl;
